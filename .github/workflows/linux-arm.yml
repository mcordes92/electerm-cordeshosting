name: linux-arm

on:
  push:
    branches: [ build, test ]

jobs:
  build:

    runs-on: ubuntu-20.04
    environment: build
    if: "!contains(github.event.head_commit.message, '[skip build]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip arm-linux]') && !contains(github.event.head_commit.message, '[skip linux3]')"

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
    # - name: xvfb
    #   uses: GabrielBB/xvfb-action@v1

    # before_script:
    # - run: export DISPLAY=:99.0
    # - run: sh -e /etc/init.d/xvfb start &
    # - run: sleep 3
    - name: Build for Linux arm64
      run: |
          sudo apt-get update -y && sudo apt-get install schroot sbuild debootstrap -y
          sudo debootstrap --include=git,curl,gnupg,ca-certificates,crossbuild-essential-arm64,python-dev,python3-dev,libarchive-tools,cmake --variant=buildd --exclude=snapd --components=main,restricted,universe,multiverse --extractor=dpkg-deb bionic /build-chroot/
          echo 'deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu bionic main restricted universe multiverse' | sudo tee /build-chroot/etc/apt/sources.list >/dev/null
          echo 'deb [arch=arm64,armhf] http://ports.ubuntu.com/ubuntu-ports bionic main restricted universe multiverse' | sudo tee -a /build-chroot/etc/apt/sources.list >/dev/null
          curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor | sudo tee /build-chroot/etc/apt/trusted.gpg.d/nodesource.gpg >/dev/null
          echo 'deb http://deb.nodesource.com/node_16.x bionic main' | sudo tee /build-chroot/etc/apt/sources.list.d/nodesource.list >/dev/null
          echo "[build-chroot]
          description=Ubuntu 18.04 Build chroot
          type=directory
          directory=/build-chroot
          root-groups=root,sudo
          profile=buildd
          personality=linux
          union-type=overlay" | sudo tee /etc/schroot/chroot.d/build-chroot.pref >/dev/null
          echo "/home /home none rw,bind 0 0" | sudo tee -a /etc/schroot/buildd/fstab >/dev/null
    - name: Install node_modules & CrossBuild native modules for arm64
      run: |
          sudo schroot -c build-chroot -u root -- bash -c "apt-get update -y
          dpkg --add-architecture arm64
          apt-get install -y nodejs libfontconfig-dev:arm64 libsecret-1-dev:arm64 libnss3:arm64 libatk1.0-0:arm64 libatk-bridge2.0-0:arm64 libgdk-pixbuf2.0-0:arm64 libgtk-3-0:arm64 libgbm1:arm64
          export CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ LD=aarch64-linux-gnu-ld
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/aarch64-linux-gnu/pkgconfig/
          export ARCH=arm64 npm_config_arch=arm64 npm_config_target_arch=arm64

    # before_install:
    - run: npm install -g yarn
    - run: npm i

    # script:
    - run: npm run prepare-build

    - name: build
      if: "!contains(github.event.head_commit.message, 'skip build')"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BUILD_NUMBER: ${{ secrets.BUILD_NUMBER }}
        CUSTOM_UPLOAD_URL: ${{ secrets.CUSTOM_UPLOAD_URL }}
      run: node build/bin/build-linux-arm

